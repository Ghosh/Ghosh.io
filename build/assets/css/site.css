/*! sanitize.css v3.0.0 | CC0 1.0 Public Domain | github.com/10up/sanitize.css */
/*
 * Normalization
 */
audio:not([controls]) {
  display: none; }

button {
  overflow: visible;
  -webkit-appearance: button; }

details {
  display: block; }

html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%; }

input {
  -webkit-border-radius: 0; }
  input[type="button"], input[type="reset"], input[type="submit"] {
    -webkit-appearance: button; }
  input[type="number"] {
    width: auto; }
  input[type="search"] {
    -webkit-appearance: textfield; }
    input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
      -webkit-appearance: none; }

main {
  display: block; }

pre {
  overflow: auto; }

progress {
  display: inline-block; }

small {
  font-size: 75%; }

summary {
  display: block; }

svg:not(:root) {
  overflow: hidden; }

template {
  display: none; }

textarea {
  overflow: auto; }

[hidden] {
  display: none; }

/*
 * Universal inheritance
 */
*,
::before,
::after {
  box-sizing: inherit; }

* {
  font-size: inherit;
  line-height: inherit; }

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit; }

/*
 * Opinionated defaults
 */
*,
::before,
::after {
  border-style: solid;
  border-width: 0; }

* {
  background-repeat: no-repeat;
  margin: 0;
  padding: 0; }

:root {
  background-color: #FFFFFF;
  box-sizing: border-box;
  color: #000000;
  cursor: default;
  font: 100% / 1.5 sans-serif;
  text-rendering: optimizeLegibility; }

a {
  text-decoration: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

button,
input,
select,
textarea {
  background-color: transparent; }

button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit; }

button,
[type="button"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="reset"],
[type="search"],
[type="submit"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
select,
textarea {
  min-height: 1.5em; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

nav ol,
nav ul {
  list-style: none; }

select {
  -moz-appearance: none;
  -webkit-appearance: none; }
  select::-ms-expand {
    display: none; }
  select::-ms-value {
    color: currentColor; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

textarea {
  resize: vertical; }

::-moz-selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

::selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

[aria-busy="true"] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  display: inherit;
  position: absolute; }
  [hidden][aria-hidden="false"]:focus {
    clip: auto; }

/* -----------------------------------------------------------------------------

  Stylekit

  A drop in sass libray for rapid front end development

  @author Indrashish Ghosh <mail@indrashishghosh.com>
  @package Stylekit
  @version 0.1.0

------------------------------------------------------------------------------*/
/* -------------------------------------------------------------------

  Stylekit Fontface Provider

  Automatically generates the code required for loading fonts
  in the website. All font styles and weights are defined
  in the $font-face config

  @author Indrashish Ghosh <mail@indrashishghosh.com>
  @package Stylekit
  @version 0.1.0

----------------------------------------------------------------------

  1. Font face Configuration
  2. Internal Font face mixin
  3. Code Generation

--------------------------------------------------------------------*/
/* -------------------------------------------------------------------

  [2] Internal Font Face mixin

--------------------------------------------------------------------*/
/* -------------------------------------------------------------------

  [3] @font-face code generation

--------------------------------------------------------------------*/
@font-face {
  font-family: "Merriweather";
  src: url("../fonts/merriweather-light-webfont.eot");
  src: url("../fonts/merriweather-light-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/merriweather-light-webfont.woff") format("woff"), url("../fonts/merriweather-light-webfont.woff2") format("woff2"), url("../fonts/merriweather-light-webfont.ttf") format("truetype"), url("../fonts/merriweather-light-webfont.svgMerriweather") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Merriweather";
  src: url("../fonts/merriweather-lightitalic-webfont.eot");
  src: url("../fonts/merriweather-lightitalic-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/merriweather-lightitalic-webfont.woff") format("woff"), url("../fonts/merriweather-lightitalic-webfont.woff2") format("woff2"), url("../fonts/merriweather-lightitalic-webfont.ttf") format("truetype"), url("../fonts/merriweather-lightitalic-webfont.svgMerriweather") format("svg");
  font-weight: nomral;
  font-style: italic; }

@font-face {
  font-family: "Rajdhani";
  src: url("../fonts/rajdhani-regular-webfont.eot");
  src: url("../fonts/rajdhani-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/rajdhani-regular-webfont.woff") format("woff"), url("../fonts/rajdhani-regular-webfont.woff2") format("woff2"), url("../fonts/rajdhani-regular-webfont.ttf") format("truetype"), url("../fonts/rajdhani-regular-webfont.svgRajdhani") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Rajdhani";
  src: url("../fonts/rajdhani-medium-webfont.eot");
  src: url("../fonts/rajdhani-medium-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/rajdhani-medium-webfont.woff") format("woff"), url("../fonts/rajdhani-medium-webfont.woff2") format("woff2"), url("../fonts/rajdhani-medium-webfont.ttf") format("truetype"), url("../fonts/rajdhani-medium-webfont.svgRajdhani") format("svg");
  font-weight: bold;
  font-style: normal; }

/**
 * Checks if the specified font stack exists in the
 * typograpghy config and returns it if present
 */
/**
 * Sets the font stack
 */
/* -----------------------------------------------------------------------------

  Stylekit Typography

  Simple, responsive typography with fine grained control over
  different sizes and breakpoints. Define font scales and
  font stacks used in your project

  @author Indrashish Ghosh <mail@indrashishghosh.com>
  @package Stylekit
  @version 0.1.0

	@todo Namespace all public maps with sk-
	@todo Namespace all public functions and mixins with sk-
	@todo Make fs and lh function aliases of namespaced functions

--------------------------------------------------------------------------------

  1. Typography Configuration
  2. Internal Typgraphy Functions
  3. Internal Typgraphy Mixins
  4. Public Typgraphy Mixins

------------------------------------------------------------------------------*/
/* -----------------------------------------------------------------------------

  [2] Internal Typography Funtions

------------------------------------------------------------------------------*/
/* -----------------------------------------------------------------------------

  [4] Public Typography Functions

------------------------------------------------------------------------------*/
/* -----------------------------------------------------------------------------

  [3] Internal Typography Mixins

------------------------------------------------------------------------------*/
/**
 * Prints media queries rules using a min-width stratergy for mobile first
 * development at the given breakpoint. For the rules within the media query
 * it calls the `make-font-styles` mixin
 *
 * @param  {string|number} $breakpoint  The breakpoint value for min-width query
 * @param  {map|number} $values         The font-size or map of font-size and line-height
 * @return {css}                        The font-size and line-height declaration
 */
/* -----------------------------------------------------------------------------

  [4] Public Typography Mixins

------------------------------------------------------------------------------*/
/**
 * Prints out the font size and line height of an element at each breakpoint
 * specified in the typograpghy config
 *
 * @param  {string} $size            The size name - micro, mega, nano, base etc
 * @param  {string} $category        The broad ategory it falls under - body, display
 * @param  {map} $map                The typography config
 * @return {css}                     The font-size and line-height declaration
 */
/* -------------------------------------------------------------------

  Stylekit Grid

  A lightweight, mobile-first, responsive Sass based
  grid micro framework. Can be used by using @extends
  or by using utility css classes

  @author Indrashish Ghosh <mail@indrashishghosh.com>
  @package Stylekit
  @version 0.1.0

----------------------------------------------------------------------

  1. Grid Configuration
  2. Internal Grid Functions
  3. Internal Grid Mixins
  4. Setting classtype
  5. Basic Stup
  6. Generating grid classes

--------------------------------------------------------------------*/
/* ---------------------------------------------------------------------

  [2] Internal Grid Funtions

----------------------------------------------------------------------*/
/**
 * Alias to get config data from
 * the grid config map
 *
 * @param $key Name of the config whose value to fetch
 */
/**
 * Calculate the width of a specific grid column
 * depending upon the total number of
 * columns
 *
 * @param $column-number The column whose width is to be calculated
 */
/* ---------------------------------------------------------------------

  [3] Internal grid mixins

----------------------------------------------------------------------*/
/**
 * Mixin to allow writing styles for
 * specific viewport sizes
 *
 * @param $breakpoint The name of the breakpoint. This should be included in the $breakpoints map
 */
/**
 * Creates classes for grid widths at different sizes
 *
 * @param $size The breakpoint class for grid
 * @param $i The grid iteration
 */
/**
 * Creates classes for 1/3 width columns at different sizes
 *
 * @param $size The breakpoint class for grid
 * @param $i The grid iteration
 */
/**
 * Creates classes for offsets at different sizes
 *
 * @param $size The breakpoint class for grid
 * @param $i The grid iteration
 */
/**
 * Creates classes for push columns at different sizes
 *
 * @param $size The breakpoint class for grid
 * @param $i The grid iteration
 */
/**
 * Creates classes for pull classes at different sizes
 *
 * @param $size The breakpoint class for grid
 * @param $i The grid iteration
 */
/**
 * Creates centered grid classes at different sizes
 *
 * @param $size The breakpoint class for grid
 */
/**
 * Loops through total number of classes
 * and calculates the width of every grid
 * column
 *
 * @param $size The value to be added to the class name
 */
/* ---------------------------------------------------------------------

  [4] Sets class type depending upon configuration

----------------------------------------------------------------------*/
/* ---------------------------------------------------------------------

  [5] Some basic setup required for the grid system to work.

----------------------------------------------------------------------*/
*,
*:after,
*:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

body {
  padding: 0;
  margin: 0; }

/* ---------------------------------------------------------------------

  [4] The container is the top most element of the grid. All columns
  classes must be included within this. This class has three major
  roles:-

----------------------------------------------------------------------*/
.container {
  margin: 0 auto;
  max-width: 1159px;
  padding-left: 19px;
  padding-right: 19px; }

/* ---------------------------------------------------------------------

  Use row only when nesting columns. The negative left and right
  margin automatically remove the padding left and padding right
  of the first and last nested children respectively.

----------------------------------------------------------------------*/
.row {
  margin-left: -19px;
  margin-right: -19px; }
  .row:before, .row:after {
    content: "";
    display: table;
    clear: both; }

/* ---------------------------------------------------------------------

  Styles common to all grid columns. This style is extended by each
  and every grid column.

----------------------------------------------------------------------*/
.col-s-1,
.col-m-1,
.col-l-1,
.col-s-1by3,
.col-s-2by3,
.col-m-1by3,
.col-m-2by3,
.col-l-1by3,
.col-l-2by3, .col-s-2,
.col-m-2,
.col-l-2, .col-s-3,
.col-m-3,
.col-l-3, .col-s-4,
.col-m-4,
.col-l-4, .col-s-5,
.col-m-5,
.col-l-5, .col-s-6,
.col-m-6,
.col-l-6, .col-s-7,
.col-m-7,
.col-l-7, .col-s-8,
.col-m-8,
.col-l-8, .col-s-9,
.col-m-9,
.col-l-9, .col-s-10,
.col-m-10,
.col-l-10, .col-s-11,
.col-m-11,
.col-l-11, .col-s-12,
.col-m-12,
.col-l-12 {
  float: left;
  position: relative;
  min-height: 1px;
  width: 100%;
  padding: 0 19px; }

/* ---------------------------------------------------------------------

  Generating all (silent) classes for the grid according to
  the various breakpoint sizes

----------------------------------------------------------------------*/
@media all and (min-width: 700px) {
  .col-s-1 {
    width: 8.33333%; }
  .col-s-offset-1 {
    margin-left: 8.33333%; }
  .col-s-push-1 {
    left: 8.33333%; }
  .col-s-pull-1 {
    right: 8.33333%; }
  .col-s-2 {
    width: 16.66667%; }
  .col-s-offset-2 {
    margin-left: 16.66667%; }
  .col-s-push-2 {
    left: 16.66667%; }
  .col-s-pull-2 {
    right: 16.66667%; }
  .col-s-3 {
    width: 25%; }
  .col-s-offset-3 {
    margin-left: 25%; }
  .col-s-push-3 {
    left: 25%; }
  .col-s-pull-3 {
    right: 25%; }
  .col-s-4 {
    width: 33.33333%; }
  .col-s-offset-4 {
    margin-left: 33.33333%; }
  .col-s-push-4 {
    left: 33.33333%; }
  .col-s-pull-4 {
    right: 33.33333%; }
  .col-s-5 {
    width: 41.66667%; }
  .col-s-offset-5 {
    margin-left: 41.66667%; }
  .col-s-push-5 {
    left: 41.66667%; }
  .col-s-pull-5 {
    right: 41.66667%; }
  .col-s-6 {
    width: 50%; }
  .col-s-offset-6 {
    margin-left: 50%; }
  .col-s-push-6 {
    left: 50%; }
  .col-s-pull-6 {
    right: 50%; }
  .col-s-7 {
    width: 58.33333%; }
  .col-s-offset-7 {
    margin-left: 58.33333%; }
  .col-s-push-7 {
    left: 58.33333%; }
  .col-s-pull-7 {
    right: 58.33333%; }
  .col-s-8 {
    width: 66.66667%; }
  .col-s-offset-8 {
    margin-left: 66.66667%; }
  .col-s-push-8 {
    left: 66.66667%; }
  .col-s-pull-8 {
    right: 66.66667%; }
  .col-s-9 {
    width: 75%; }
  .col-s-offset-9 {
    margin-left: 75%; }
  .col-s-push-9 {
    left: 75%; }
  .col-s-pull-9 {
    right: 75%; }
  .col-s-10 {
    width: 83.33333%; }
  .col-s-offset-10 {
    margin-left: 83.33333%; }
  .col-s-push-10 {
    left: 83.33333%; }
  .col-s-pull-10 {
    right: 83.33333%; }
  .col-s-11 {
    width: 91.66667%; }
  .col-s-offset-11 {
    margin-left: 91.66667%; }
  .col-s-push-11 {
    left: 91.66667%; }
  .col-s-pull-11 {
    right: 91.66667%; }
  .col-s-12 {
    width: 100%; }
  .col-s-offset-12 {
    margin-left: 100%; }
  .col-s-push-12 {
    left: 100%; }
  .col-s-pull-12 {
    right: 100%; }
  .col-s-1by3 {
    width: 33.33333%; }
  .col-s-2by3 {
    width: 66.66667%; }
  .col-s-centered {
    margin-left: auto;
    margin-right: auto;
    float: none; } }

@media all and (min-width: 800px) {
  .col-m-1 {
    width: 8.33333%; }
  .col-m-offset-1 {
    margin-left: 8.33333%; }
  .col-m-push-1 {
    left: 8.33333%; }
  .col-m-pull-1 {
    right: 8.33333%; }
  .col-m-2 {
    width: 16.66667%; }
  .col-m-offset-2 {
    margin-left: 16.66667%; }
  .col-m-push-2 {
    left: 16.66667%; }
  .col-m-pull-2 {
    right: 16.66667%; }
  .col-m-3 {
    width: 25%; }
  .col-m-offset-3 {
    margin-left: 25%; }
  .col-m-push-3 {
    left: 25%; }
  .col-m-pull-3 {
    right: 25%; }
  .col-m-4 {
    width: 33.33333%; }
  .col-m-offset-4 {
    margin-left: 33.33333%; }
  .col-m-push-4 {
    left: 33.33333%; }
  .col-m-pull-4 {
    right: 33.33333%; }
  .col-m-5 {
    width: 41.66667%; }
  .col-m-offset-5 {
    margin-left: 41.66667%; }
  .col-m-push-5 {
    left: 41.66667%; }
  .col-m-pull-5 {
    right: 41.66667%; }
  .col-m-6 {
    width: 50%; }
  .col-m-offset-6 {
    margin-left: 50%; }
  .col-m-push-6 {
    left: 50%; }
  .col-m-pull-6 {
    right: 50%; }
  .col-m-7 {
    width: 58.33333%; }
  .col-m-offset-7 {
    margin-left: 58.33333%; }
  .col-m-push-7 {
    left: 58.33333%; }
  .col-m-pull-7 {
    right: 58.33333%; }
  .col-m-8 {
    width: 66.66667%; }
  .col-m-offset-8 {
    margin-left: 66.66667%; }
  .col-m-push-8 {
    left: 66.66667%; }
  .col-m-pull-8 {
    right: 66.66667%; }
  .col-m-9 {
    width: 75%; }
  .col-m-offset-9 {
    margin-left: 75%; }
  .col-m-push-9 {
    left: 75%; }
  .col-m-pull-9 {
    right: 75%; }
  .col-m-10 {
    width: 83.33333%; }
  .col-m-offset-10 {
    margin-left: 83.33333%; }
  .col-m-push-10 {
    left: 83.33333%; }
  .col-m-pull-10 {
    right: 83.33333%; }
  .col-m-11 {
    width: 91.66667%; }
  .col-m-offset-11 {
    margin-left: 91.66667%; }
  .col-m-push-11 {
    left: 91.66667%; }
  .col-m-pull-11 {
    right: 91.66667%; }
  .col-m-12 {
    width: 100%; }
  .col-m-offset-12 {
    margin-left: 100%; }
  .col-m-push-12 {
    left: 100%; }
  .col-m-pull-12 {
    right: 100%; }
  .col-m-1by3 {
    width: 33.33333%; }
  .col-m-2by3 {
    width: 66.66667%; }
  .col-m-centered {
    margin-left: auto;
    margin-right: auto;
    float: none; } }

@media all and (min-width: 1040px) {
  .col-l-1 {
    width: 8.33333%; }
  .col-l-offset-1 {
    margin-left: 8.33333%; }
  .col-l-push-1 {
    left: 8.33333%; }
  .col-l-pull-1 {
    right: 8.33333%; }
  .col-l-2 {
    width: 16.66667%; }
  .col-l-offset-2 {
    margin-left: 16.66667%; }
  .col-l-push-2 {
    left: 16.66667%; }
  .col-l-pull-2 {
    right: 16.66667%; }
  .col-l-3 {
    width: 25%; }
  .col-l-offset-3 {
    margin-left: 25%; }
  .col-l-push-3 {
    left: 25%; }
  .col-l-pull-3 {
    right: 25%; }
  .col-l-4 {
    width: 33.33333%; }
  .col-l-offset-4 {
    margin-left: 33.33333%; }
  .col-l-push-4 {
    left: 33.33333%; }
  .col-l-pull-4 {
    right: 33.33333%; }
  .col-l-5 {
    width: 41.66667%; }
  .col-l-offset-5 {
    margin-left: 41.66667%; }
  .col-l-push-5 {
    left: 41.66667%; }
  .col-l-pull-5 {
    right: 41.66667%; }
  .col-l-6 {
    width: 50%; }
  .col-l-offset-6 {
    margin-left: 50%; }
  .col-l-push-6 {
    left: 50%; }
  .col-l-pull-6 {
    right: 50%; }
  .col-l-7 {
    width: 58.33333%; }
  .col-l-offset-7 {
    margin-left: 58.33333%; }
  .col-l-push-7 {
    left: 58.33333%; }
  .col-l-pull-7 {
    right: 58.33333%; }
  .col-l-8 {
    width: 66.66667%; }
  .col-l-offset-8 {
    margin-left: 66.66667%; }
  .col-l-push-8 {
    left: 66.66667%; }
  .col-l-pull-8 {
    right: 66.66667%; }
  .col-l-9 {
    width: 75%; }
  .col-l-offset-9 {
    margin-left: 75%; }
  .col-l-push-9 {
    left: 75%; }
  .col-l-pull-9 {
    right: 75%; }
  .col-l-10 {
    width: 83.33333%; }
  .col-l-offset-10 {
    margin-left: 83.33333%; }
  .col-l-push-10 {
    left: 83.33333%; }
  .col-l-pull-10 {
    right: 83.33333%; }
  .col-l-11 {
    width: 91.66667%; }
  .col-l-offset-11 {
    margin-left: 91.66667%; }
  .col-l-push-11 {
    left: 91.66667%; }
  .col-l-pull-11 {
    right: 91.66667%; }
  .col-l-12 {
    width: 100%; }
  .col-l-offset-12 {
    margin-left: 100%; }
  .col-l-push-12 {
    left: 100%; }
  .col-l-pull-12 {
    right: 100%; }
  .col-l-1by3 {
    width: 33.33333%; }
  .col-l-2by3 {
    width: 66.66667%; }
  .col-l-centered {
    margin-left: auto;
    margin-right: auto;
    float: none; } }

/* -------------------------------------------------------------------

  Stylekit Color Provider

  Categorize and define all colors used in your project into
  different palletes and access them by using the helper
  functions

  @author Indrashish Ghosh <mail@indrashishghosh.com>
  @package Stylekit
  @version 0.1.0

----------------------------------------------------------------------

  1. Color Configuration
  2. Color Funtion
  3. Color Funtion Alias

--------------------------------------------------------------------*/
/* -------------------------------------------------------------------

  [2] Color Funtion

--------------------------------------------------------------------*/
/**
 * Returns a colour in HEX format depending upon the palette
 * and tone specified.
 */
/* -------------------------------------------------------------------

  [3] Color Funtion Alias

--------------------------------------------------------------------*/
/* -------------------------------------------------------------------

  Stylekit z-index Provider

  Define all the z-index values used by your project in
	a single map and accessthem by using the helper
	functions

  @author Indrashish Ghosh <mail@indrashishghosh.com>
  @package Stylekit
  @version 0.1.0

----------------------------------------------------------------------

  1. z-index Configuration
  2. z-index Function
  3. z-index Function Alias

--------------------------------------------------------------------*/
/* -------------------------------------------------------------------

  [2] z-index Funtion

--------------------------------------------------------------------*/
/* -------------------------------------------------------------------

  [3] z-index Funtion Alias

--------------------------------------------------------------------*/
/*
		pesticide v0.1.0 . @mrmrs . MIT
*/
/* ---------------------------------------------------------------------

	Simple Burger Menu

	HTML
	---------------------

	<a href="#" class="header__menu-icon menu" id="js-burger-menu">
			<span class="menu__icon"></span>
	</a>


	Sass
	---------------------

	.menu {
		padding: 20px;
		padding-right: 0; // No negate margin on mobile

		&__icon {
			@include burger(25px, 2px, 3px, color(neutral, darker), 3px);
		}

		&.is-active {
			.menu__icon {
				@include burger-to-cross();
			}
		}
	}

	Javascript
	----------------------------------
	<script>
			var menuButton = document.getElementById('js-burger-menu');
			menuButton.addEventListener('click', function (e) {
						menuButton.classList.toggle('is-active');
						e.preventDefault();
			});
	</script>

----------------------------------------------------------------------*/
/**
 * Select parts of the burger
 */
/**
 * Burger animations
 */
body {
  font-size: 14px;
  line-height: 26px;
  font-family: "Avenir Next", "Georgia", "Times New Roman", "Times", serif;
  font-weight: normal; }

h1,
h2,
h3,
h4,
h5,
h6 {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #4a4e53;
  font-family: "Avenir Next", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-weight: bold; }

p {
  color: #4a4e53;
  margin-bottom: 20px;
  margin-top: 0; }

dl,
ol,
ul {
  color: #4a4e53;
  margin-bottom: 20px; }

ul ul,
ol ul,
ul ol,
ol ol {
  margin-bottom: 0;
  margin-top: 0; }

a {
  color: #479e2b; }

pre,
code,
samp {
  font-family: "Source Code Pro", "Consolas", "Courier", monospace;
  font-weight: normal; }

pre code {
  margin-bottom: 20px;
  margin-top: 0;
  overflow-x: scroll;
  white-space: pre; }
  pre code code {
    white-space: -moz-pre-wrap;
    white-space: pre-wrap;
    word-wrap: normal; }

code {
  font-family: "Source Code Pro", "Consolas", "Courier", monospace;
  white-space: pre; }

hr {
  border-bottom: 1px solid #eaeaea;
  border-top: 1px solid transparent;
  border: 0;
  height: 0;
  margin-bottom: 20px; }

mark {
  background-color: #fbf6bb;
  color: #4a4e53; }

sub,
sup {
  font-size: smaller; }

input,
abbr,
acronym,
blockquote,
code,
kbd,
q,
samp,
var {
  hyphens: none; }

abbr {
  font-variant: small-caps;
  font-weight: 600;
  text-transform: lowercase; }

abbr[title]:hover {
  cursor: help; }

.btn--primary {
  -webkit-appearance: none;
  background-color: transparent;
  border: 12px solid transparent;
  color: inherit;
  cursor: pointer;
  display: inline-block;
  font-family: "Avenir Next", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  height: auto;
  line-height: 1.5;
  margin: 0;
  padding: 10px 30px;
  text-decoration: none;
  vertical-align: middle; }
  .btn--primary:hover {
    text-decoration: none; }
  .btn--primary:focus {
    outline: none; }

::-moz-focus-inner {
  border: 0;
  padding: 0; }

.btn--primary {
  border: solid 2px #479e2b;
  border-radius: 30px;
  color: #479e2b; }

.header__inner {
  padding: 40px 0; }
  .header__inner:before, .header__inner:after {
    content: "";
    display: table;
    clear: both; }

.header__logo {
  color: #4a4e53;
  float: left;
  height: 24px;
  width: 50px; }

.header__nav {
  float: left;
  margin-left: 30px; }

.header__twitter {
  color: #0074d9;
  float: right;
  font-size: 13px; }

.nav {
  list-style-type: none; }
  .nav:before, .nav:after {
    content: "";
    display: table;
    clear: both; }
  .nav__item {
    float: left;
    font-size: 13px;
    margin-left: 12px; }
    .nav__item:first-child {
      margin-left: 0; }
  .nav__link {
    color: #868c92; }

.intro__inner:before, .intro__inner:after {
  content: "";
  display: table;
  clear: both; }

.intro__text {
  float: left; }

.intro__headline {
  font-size: 24px;
  line-height: 32px;
  font-weight: 600;
  margin-bottom: 10px; }

.intro__byline {
  font-size: 18px;
  line-height: 24px;
  color: #868c92;
  width: 445px; }

.intro__cta {
  float: right; }

.intro__btn {
  margin-top: 22px; }

.hide {
  display: none; }
