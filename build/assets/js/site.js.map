{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/minigrid/src/index.js","source/assets/js/inbox.js"],"names":[],"mappingszJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"site.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* @license minigrid v2.2.0 â€“ minimal cascading grid layout http://alves.im/minigrid */\n(function (exports) {\n\n  'use strict';\n\n  var transformProp;\n  var loaded;\n\n  (function () {\n    var style = document.createElement('a').style;\n    var prop;\n    if (style[prop = 'webkitTransform'] !== undefined) {\n      transformProp = prop;\n    }\n    if (style[prop = 'msTransform'] !== undefined) {\n      transformProp = prop;\n    }\n    if (style[prop = 'transform'] !== undefined) {\n      transformProp = prop;\n    }\n  }());\n\n  function minigrid(props) {\n    var containerEle = props.container instanceof Node ?\n      props.container : document.querySelector(props.container);\n\n    if (!containerEle) {\n      return false;\n    }\n\n    var itemsNodeList = props.item instanceof NodeList ?\n      props.item : containerEle.querySelectorAll(props.item);\n    if (!itemsNodeList || itemsNodeList.length === 0) {\n      return false;\n    }\n\n    if (!props.containerLoaded || typeof props.containerLoaded !== 'string') {\n      props.containerLoaded = false;\n    }\n\n    if (!props.containerLoaded || typeof props.itemLoaded !== 'string') {\n      props.itemLoaded = false;\n    }\n\n    if (loaded || props.skipWindowOnLoad) {\n      init(containerEle, itemsNodeList, props);\n      return;\n    }\n\n    if (/webkit/.test(navigator.userAgent.toLowerCase())) {\n      window.addEventListener('load', function(){\n        init(containerEle, itemsNodeList, props);\n      });\n    } else {\n      window.onload = function() {\n        init(containerEle, itemsNodeList, props);\n      };\n    }\n\n  }\n\n  function init(containerEle, itemsNodeList, props) {\n    if (props.containerLoaded) {\n      containerEle.classList.add(props.containerLoaded);\n    } else if (!/loaded/.test(containerEle.className)) {\n      containerEle.classList.add(containerEle.className.split(' ')[0] + '--loaded');\n    }\n\n    loaded = true;\n\n    var gutter = (\n      typeof props.gutter === 'number' &&\n      isFinite(props.gutter) &&\n      Math.floor(props.gutter) === props.gutter\n    ) ? props.gutter : 0;\n    var done = props.done;\n\n    containerEle.style.width = '';\n\n    var forEach = Array.prototype.forEach;\n    var containerWidth = containerEle.getBoundingClientRect().width;\n    var firstChildWidth = itemsNodeList[0].getBoundingClientRect().width + gutter;\n    var cols = Math.max(Math.floor((containerWidth - gutter) / firstChildWidth), 1);\n    var count = 0;\n\n    containerWidth = (firstChildWidth * cols + gutter) + 'px';\n    containerEle.style.width = containerWidth;\n    containerEle.style.position = 'relative';\n\n    var itemsGutter = [];\n    var itemsPosX = [];\n\n    for ( var g = 0 ; g < cols ; ++g ) {\n      itemsPosX.push(g * firstChildWidth + gutter);\n      itemsGutter.push(gutter);\n    }\n\n    forEach.call(itemsNodeList, function (item) {\n      var itemIndex = itemsGutter\n        .slice(0)\n        .sort(function (a, b) {\n          return a - b;\n        })\n        .shift();\n      itemIndex = itemsGutter.indexOf(itemIndex);\n\n      var posX = itemsPosX[itemIndex];\n      var posY = itemsGutter[itemIndex];\n\n      item.style.position = 'absolute';\n      item.style.webkitBackfaceVisibility =  item.style.backfaceVisibility = 'hidden';\n      if (props.itemLoaded) {\n        item.classList.add(props.itemLoaded);\n      } else if (!/loaded/.test(item.className)) {\n        item.classList.add(item.className.split(' ')[0] + '--loaded');\n      }\n\n      if (!props.animate && transformProp) {\n        item.style[transformProp] = 'translate3D(' + posX + 'px,' + posY + 'px, 0)';\n      }\n\n      itemsGutter[itemIndex] += item.getBoundingClientRect().height + gutter;\n      count = count + 1;\n\n      if (props.animate) {\n        return props.animate(item, posX, posY, count);\n      }\n\n    });\n\n    var containerHeight = itemsGutter\n      .slice(0)\n      .sort(function (a, b) {\n        return a - b;\n      })\n      .pop();\n\n    containerEle.style.height = containerHeight + 'px';\n\n    if (typeof done === 'function') {\n      done(itemsNodeList);\n    }\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function() { return minigrid; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = minigrid;\n  } else {\n    exports.minigrid = minigrid;\n  }\n\n})(this);\n","var minigrid = require('minigrid');\n\nminigrid({\n  container: '.minigrid',\n  item: '.minigrid-item',\n  gutter: 10\n});\n\nconsole.log(\"Hello there\");\n"]}